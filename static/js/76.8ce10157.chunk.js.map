{"version":3,"file":"static/js/76.8ce10157.chunk.js","mappings":"8QACA,EAA2B,uBAA3B,EAA6D,uB,SCIhDA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEsBC,EAAAA,EAAAA,IAAYN,GAFlC,OAESG,EAFT,OAGGC,EAAQD,GAHX,uGAAD,sDAMD,GAAE,CAACH,IACCG,GAIH,eAAII,UAAWC,EAAf,SACGL,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OACR,4BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAI,GACJC,MAAM,SAER,eAAIR,UAAWC,EAAf,SAA8BE,KAC9B,uCAAeC,OAPPD,EADF,MAJL,IAiBV,EAED,G,8LCnCAM,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,6FACnBC,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAHY,SAMFD,EAAAA,GAAAA,IAAU,sBAAuBG,GAN/B,cAMnBG,EANmB,yBAOlBA,EAASC,KAAKC,SAPI,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,gFACpBP,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTU,SAAU,UAJY,SAOHX,EAAAA,GAAAA,IAAA,iBAAoBU,GAAYP,GAP7B,cAOpBG,EAPoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWZjB,EAAW,mCAAG,WAAMoB,GAAN,gFACnBP,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTU,SAAU,UAJW,SAOFX,EAAAA,GAAAA,IAAA,iBAAoBU,EAApB,YAAwCP,GAPtC,cAOnBG,EAPmB,yBAQlBA,EAASC,KAAKpB,MARI,2CAAH,sDAWXyB,EAAc,mCAAG,WAAMF,GAAN,gFACtBP,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTU,SAAU,UAJc,SAOLX,EAAAA,GAAAA,IAAA,iBAAoBU,EAApB,YAAwCP,GAPnC,cAOtBG,EAPsB,yBAQrBA,EAASC,KAAKC,SARO,2CAAH,sDAWdK,EAAY,mCAAG,WAAMC,GAAN,gFACpBX,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTU,SAAU,QACVG,MAAAA,IALsB,SAQHd,EAAAA,GAAAA,IAAA,eAA0BG,GARvB,cAQpBG,EARoB,yBASnBA,EAASC,KAAKC,SATK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\"};","import { getCastById } from 'components/services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    (async function getCast() {\n      try {\n        const cast = await getCastById(movieId);\n        setCast(cast);\n      } catch (error) {}\n    })();\n  }, [movieId]);\n  if (!cast) {\n    return null;\n  }\n  return (\n    <ul className={css.castList}>\n      {cast.map(({ name, character, profile_path }) => (\n        <div key={name}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n            alt=\"\"\n            width=\"200\"\n          />\n          <li className={css.castItem}>{name}</li>\n          <p>Character: {character}</p>\n        </div>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '80621b5b2d3f86fe2da6b1cfe7d912cf';\n\nexport const getTrending = async () => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const response = await axios.get('/trending/movie/day', options);\n  return response.data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}`, options);\n  return response.data;\n};\n\nexport const getCastById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}/credits`, options);\n  return response.data.cast;\n};\n\nexport const getReviewsById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}/reviews`, options);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n    },\n  };\n  const response = await axios.get(`search/movie`, options);\n  return response.data.results;\n};\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","getCastById","className","css","map","name","character","profile_path","src","alt","width","axios","API_KEY","getTrending","options","params","api_key","response","data","results","getMovieById","movie_id","language","getReviewsById","searchMovies","query"],"sourceRoot":""}
{"version":3,"file":"static/js/73.712360cb.chunk.js","mappings":"8QACA,EAA4B,wB,SCIfA,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAE0BC,EAAAA,EAAAA,MAF1B,OAESC,EAFT,OAGGH,EAASG,GAHZ,uGAAD,sDAMD,GAAE,KAGD,iCACE,2CACkB,IAAjBJ,EAAMK,SACL,wBACGL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,yBACE,SAAC,KAAD,CAAMC,UAAWC,EAAeC,GAAE,iBAAYJ,GAA9C,SACGC,KAFID,EADA,QAWpB,EAED,G,8LCjCAK,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHV,EAAW,mCAAG,6FACnBW,EAAU,CACdC,OAAQ,CACNC,QAASH,IAHY,SAMFD,EAAAA,GAAAA,IAAU,sBAAuBE,GAN/B,cAMnBG,EANmB,yBAOlBA,EAASC,KAAKC,SAPI,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,gFACpBP,EAAU,CACdC,OAAQ,CACNC,QAASH,EACTS,SAAU,UAJY,SAOHV,EAAAA,GAAAA,IAAA,iBAAoBS,GAAYP,GAP7B,cAOpBG,EAPoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWZK,EAAW,mCAAG,WAAMF,GAAN,gFACnBP,EAAU,CACdC,OAAQ,CACNC,QAASH,EACTS,SAAU,UAJW,SAOFV,EAAAA,GAAAA,IAAA,iBAAoBS,EAApB,YAAwCP,GAPtC,cAOnBG,EAPmB,yBAQlBA,EAASC,KAAKM,MARI,2CAAH,sDAWXC,EAAc,mCAAG,WAAMJ,GAAN,gFACtBP,EAAU,CACdC,OAAQ,CACNC,QAASH,EACTS,SAAU,UAJc,SAOLV,EAAAA,GAAAA,IAAA,iBAAoBS,EAApB,YAAwCP,GAPnC,cAOtBG,EAPsB,yBAQrBA,EAASC,KAAKC,SARO,2CAAH,sDAWdO,EAAY,mCAAG,WAAMC,GAAN,gFACpBb,EAAU,CACdC,OAAQ,CACNC,QAASH,EACTS,SAAU,QACVK,MAAAA,IALsB,SAQHf,EAAAA,GAAAA,IAAA,eAA0BE,GARvB,cAQpBG,EARoB,yBASnBA,EAASC,KAAKC,SATK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/Home/Home.module.css?88c1","components/pages/Home/Home.jsx","components/services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendLink\":\"Home_trendLink__uEMKF\"};","import { getTrending } from 'components/services/api';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './Home.module.css';\n\nexport const Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    (async function fetchFilms() {\n      try {\n        const trending = await getTrending();\n        setFilms(trending);\n      } catch (error) {}\n    })();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {films.length !== 0 && (\n        <ul>\n          {films.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link className={css.trendLink} to={`movies/${id}`}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '80621b5b2d3f86fe2da6b1cfe7d912cf';\n\nexport const getTrending = async () => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const response = await axios.get('/trending/movie/day', options);\n  return response.data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}`, options);\n  return response.data;\n};\n\nexport const getCastById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}/credits`, options);\n  return response.data.cast;\n};\n\nexport const getReviewsById = async movie_id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const response = await axios.get(`/movie/${movie_id}/reviews`, options);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n    },\n  };\n  const response = await axios.get(`search/movie`, options);\n  return response.data.results;\n};\n"],"names":["Home","useState","films","setFilms","useEffect","getTrending","trending","length","map","id","original_title","className","css","to","axios","API_KEY","options","params","api_key","response","data","results","getMovieById","movie_id","language","getCastById","cast","getReviewsById","searchMovies","query"],"sourceRoot":""}